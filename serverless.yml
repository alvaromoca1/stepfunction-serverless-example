service: step6-test-word

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20220515
  stage: ${opt:stage}
  region: ${opt:region}
  iam:
    role:
      name: "role-step6-test-wprd-dev"
      statements:
        - Effect: Allow
          Action:
          - "states:DescribeExecution"
          - "states:DescribeStateMachineForExecution"
          - states:StartSyncExecution
          - states:StartExecution
          - states:UpdateStateMachine
          Resource: '*'

plugins:
  - serverless-offline
  - serverless-step-functions

functions:
  getHello:
    handler: infraestructure/handlers/hello-handler.getHello
    events:
      - http:
          path: helloword       # https://dominio.fulanito/{stage}/empleados
          method: get
  sf_step1:
    handler: infraestructure/handlers/step-one-handler.stepOneHandler
  sf_step2:
    handler: infraestructure/handlers/step-two-handler.stepTwoHandler
  sf_step3:
    handler: infraestructure/handlers/step-three-handler.stepThreeandler

stepFunctions:
  validate: true
  stateMachines:
    sfExpress:
      type: EXPRESS
      events:
        - http:
            path: hellostepp
            method: POST
            action: StartSyncExecution
            request:
              template:
                application/json: |
                  #set($body= $input.json('$'))
                  #set($inputRoot='{ "data" :'+$body+',"apiInfo":{"httpMethod" :"'+ $context.httpMethod+'", "apiKey":"'+ $context.identity.apiKey+'"}}')
                  #set($apiData=$util.escapeJavaScript($inputRoot))
                  #set($apiData=$apiData.replaceAll("\\'","'"))
                  {
                    "input" :"$apiData",
                    "stateMachineArn": "arn:aws:states:us-east-1:776703223828:stateMachine:stepFunctions_test06"
                  }
            response:
              headers:
                Content-Type: "'application/json'"
              template:
                application/json: |
                  #set ($bodyObj = $util.parseJson($input.body))
                  #if ($bodyObj.status == "SUCCEEDED")
                    $util.parseJson($bodyObj.output).body
                  #elseif ($bodyObj.status == "FAILED")
                    #set($context.responseOverride.status = 500)
                    {
                      "cause": "$bodyObj.cause",
                      "error": "$bodyObj.error"
                    }
                  #else
                    #set($context.responseOverride.status = 500)
                    $input.body
                  #end
      name: stepFunctions_test06
      definition:
        StartAt: sf_step1
        States:
          sf_step1:
            Type: Task
            Resource: 
              Fn::GetAtt: [sf_step1, Arn]
            Next: sf_step2
          sf_step2:
            Type: Task
            Resource: 
              Fn::GetAtt: [sf_step2, Arn]
            Next: sf_step3
          sf_step3:
            Type: Task
            Resource: 
              Fn::GetAtt: [sf_step3, Arn]
            ResultPath: "$"
            OutputPath: "$"
            End: true